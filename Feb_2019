New File 


 if (Date_Expiration == Calc_Date_Expiration ) {'yes' }  else { 'no'} 
 Abs(Date_Expiration-Calc_Date_Expiration)
---------------------------------------------
select format(convert(date,right('0'+SUBSTRING(convert(varchar,cal_date),1,len(cal_date)-4),2) + '/' + LEFT(right(cal_date,4),2)
+ '/2045'),'MM/dd/yyyy') 
, cal_date from testdate
------------------------------------------------------
select iif(cal_date=50511,'Yes','No'),
case when  cal_date = 50511 then 'Yes' else 'No' end from testdate
----------------------------------------------------------------
Loans_live:

TaxIdFlag:
Decode(Cupers, 'N', 'B', 'P')

Modified Cur Bal:

if(Lnbal < 0) {Lnbal} else{if(Modified_Lndoe='No') {Lnbal} else {0}}

if(Cussnr ==156402658) {0} 
if(Cussnr ==38263703) {0}
if(Cussnr ==509607104) {0}
if(Cussnr ==511568125) {0}
if(Cussnr ==511601676) {0}

-------------------------------
Mod Lnntdt:

if(Length(Lnntdt) == 8) {(ToChar(Substr(Lnntdt, 1, 4),0) + ToChar(Substr(Lnntdt, 7,2),0))*1}

if(Length(Lnntdt) == 7) {(ToChar(Substr(Lnntdt, 1, 3),0) + ToChar(Substr(Lnntdt, 6,2),0))*1}

if(Length(Lnntdt) <7) {0}

---------------------------------------------
Mod Lnnxmt:
if(Length(Lnnxmt) == 8) {(ToChar(Substr(Lnnxmt, 1, 4),0) + ToChar(Substr(Lnnxmt, 7,2),0))*1}

if(Length(Lnnxmt) == 7) {(ToChar(Substr(Lnnxmt, 1, 3),0) + ToChar(Substr(Lnnxmt, 6,2),0))*1}

if(Length(Lnnxmt) <7) {0}
-------------------------------
Mod Lnexpd:
if(Length(Lnexpd) == 8) {(ToChar(Substr(Lnexpd, 1, 4),0) + ToChar(Substr(Lnexpd, 7,2),0))*1}

if(Length(Lnexpd) == 7) {(ToChar(Substr(Lnexpd, 1, 3),0) + ToChar(Substr(Lnexpd, 6,2),0))*1}

if(Length(Lnexpd) <7) {0}
-------------------------------------
Modified Face Amt:

if(Lnface < 0) {Lnface} else{if(Modified_Lndoe='No') {Lnface} else {0}}

if(Cussnr ==156402658) {0} 
if(Cussnr ==38263703) {0}
if(Cussnr ==509607104) {0}
if(Cussnr ==511568125) {0}
if(Cussnr ==511601676) {0}
if(Cussnr ==512442056) {0}
if(Cussnr ==513506259) {0}
if(Cussnr ==514523601) {0}
if(Cussnr ==515460692) {0}
if(Cussnr ==515460728) {0}
if(Cussnr ==515460739) {0}
if(Cussnr ==515460757) {0}
if(Cussnr ==515460777) {0}
if(Cussnr ==515460790) {0}
if(Cussnr ==515501034) {0}
if(Cussnr ==524567898) {0}

----------------------------------------
Rate:
Trunc(Lnrate*100,2)
----------------------------------
First:
if(Lnnote == Prior(Lnnote) && Rel_Sort == 1) {'Bad'} else {'First'}
---------------------------------------
Unique:
ToChar(Lnnote, "0") + ToChar(Rel_Sort, "0")
--------------------------------------------------
Dup:
if(Count(Unique, Unique) >1 && Rel_Sort == 1) {'DUPS'} else {'Ok'}

---------------------------------------------------------

SELECT format(convert(date,right('0'+SUBSTRING(convert(varchar,DSEDT),1,len(DSEDT)-4),2) + '/' + LEFT(right(DSEDT,4),2)+'/'+RIGHT(DSEDT,2),'MM/dd/yyyy' FROM [SourceData].[TAP003]
===============

select IIF(Cupers='N', 'B', 'P')  From xxxx
declare @lnntdt varchar(8)='6131996'
  select
  iif(len(@Lnntdt)=8,convert(varchar,substring(@lnntdt,1,4))+convert(varchar,substring(@lnntdt,7,2)),
  iif(len(@Lnntdt)=7,convert(varchar,substring(@lnntdt,1,3))+convert(varchar,substring(@lnntdt,6,2)),
  0)
  )
  
  ---
  case when Lnface<0then Lnface
	when Modified_Lndoe='No'then Lnface
	when Cussnr in(402658,38263703,09607104,11568125,11601676,12442056,13506259,14523601,15460692,15460728,15460739,15460757,15460777,15460790,15501034,24567898)then 0
	else 0
 -----------------------
 select iif(cal_date=50511,'Yes','No'),
case when  cal_date = 50511 then 'Yes' else 'No' end from testdate
 --------
 
   SELECT format(convert(date,right('0'+SUBSTRING(convert(varchar,cal_date),1,len(cal_date)-4),2) 
  + '/' + LEFT(right(cal_date,4),2)+'/'+RIGHT(cal_date,2)),'MM/dd/yyyy')
   FROM testdate================================
   
   declare @OutputValue varchar(200)
set @OutputValue = left(RIGHT('0' + CONVERT(VARCHAR,111116), 6),2) + '/' + substring(RIGHT('0' + CONVERT(VARCHAR,111116), 6),3,2) + '/' + right(RIGHT('0' + CONVERT(VARCHAR,111116), 6),2)
return @OutputValue
------------------------------

 select [ModLnntdt]=   iif(len(Lnntdt)=8,substring(convert(varchar,lnntdt),1,4)+substring(convert(varchar,lnntdt),7,2),
                       iif(len(Lnntdt)=7,substring(convert(varchar,lnntdt),1,3)+substring(convert(varchar,lnntdt),6,2),
					   iif(len(lnntdt)< 7, 0,0)))
--------

out put of modified column:
112,001
92,810
101,102
--------
6211996
8011994
11021994
12021994
6221995
7161994
10161995
12121995
===============

AccountDetails
'Revenue $' + Round(Total_Revenue_Due,2) + ' with ' + Total_Item_Count + ' items last month'
ColMin(Open_Date_Format, Account_Number)
Sum(Current_Revenue_Due, Account_Number)
if(Account_Number == Next(Account_Number)) {'Bad'} else {'Last'}
=========================
2/15/19

with cteTaDormantCnt as
(select distinct CUSTOMER_NUMBER=CUNBR,[TaDormantCnt]=count(DMACCT)
 from 
 [SNLBanker_DW].[SourceData].[TAP002] ta 
join [SNLBanker_DW].[SourceData].[CUP009] on  ta.DMTYP * 10000000000 + ta.DMACCT = CUP009.CUX1AC 
join  [SNLBanker_DW].[SourceData].[CUP003] cu
on convert(varchar(100),cup009.cux1cs) = cu.CUNBR

group by cu.CUNBR,cup009.CUXREL,ta.DMSTAT,ta.DMDLA,ta.DMMAIL,ta.DMTYPE

having
 CUXREL IN ('JAF', 'JOF', 'OWN', 'SOW') 
 AND ta.DMSTAT='5'
  AND [dbo].[fn_MDDYY_To_Date](DMDLA) <   (dateadd(month,-60,getdate()))
  AND  DMTYPE not BETWEEN '300' AND '399'
  AND Ta.DMMAIL='X')

 
select 
[CUSTOMER_NUMBER],
[TaDormantCnt] from cteTaDormantCnt
join [SNLBanker_DW].[SourceData].[TAP002] ta 
join [SNLBanker_DW].[SourceData].[CUP009] on  ta.DMTYP * 10000000000 + ta.DMACCT = CUP009.CUX1AC 
join  [SNLBanker_DW].[SourceData].[CUP003] cu
on convert(varchar(100),cup009.cux1cs) = cu.CUNBR
 where
 ta.DMSTAT  in(4,5,8)
 and [dbo].[fn_MDDYY_To_Date](DMDLA)>= (dateadd(month,-60,getdate()))
 and Ta.DMMAIL<>'X'
 and CUP009.CUXREL IN ('JAF', 'JOF', 'OWN', 'SOW') 
  and DMTYPE not BETWEEN '300' AND '399'
================================================

with cteTaDormantCnt as
(select distinct CUSTOMER_NUMBER=CUNBR,[TaDormantCnt]=count(DMACCT)
 from 
 [SNLBanker_DW].[SourceData].[TAP002] ta 
join [SNLBanker_DW].[SourceData].[CUP009] on  ta.DMTYP * 10000000000 + ta.DMACCT = CUP009.CUX1AC 
join  [SNLBanker_DW].[SourceData].[CUP003] cu
on convert(varchar(100),cup009.cux1cs) = cu.CUNBR

group by cu.CUNBR,cup009.CUXREL,ta.DMSTAT,ta.DMDLA,ta.DMMAIL,ta.DMTYPE,cup009.cux1cs

having
 CUXREL IN ('JAF', 'JOF', 'OWN', 'SOW') 
 AND ta.DMSTAT='5'
  AND [dbo].[fn_MDDYY_To_Date](DMDLA) <   (dateadd(month,-60,getdate()))
  AND  DMTYPE not BETWEEN '300' AND '399'
  AND Ta.DMMAIL='X'),


 
 /* Cte2 TaActiveCnt  */

 TaActiveCnt as
(select 
[CustomerNumber]=CUP009.CUX1CS,
[TaActiveCnt]=Count (ta.DMACCT)
from [SNLBanker_DW].[SourceData].[TAP002] ta 
join [SNLBanker_DW].[SourceData].[CUP009] on  ta.DMTYP * 10000000000 + ta.DMACCT = CUP009.CUX1AC 
join  [SNLBanker_DW].[SourceData].[CUP003] cu
on convert(varchar(100),cup009.cux1cs) = cu.CUNBR
join  cteTaDormantCnt
on cu.CUNBR= cteTaDormantCnt.CUSTOMER_NUMBER group by cup009.cux1cs

having
 ta.DMSTAT  in(4,5,8)
 and [dbo].[fn_MDDYY_To_Date](DMDLA)>= (dateadd(month,-60,getdate()))
 and Ta.DMMAIL<>'X'
 and CUP009.CUXREL IN ('JAF', 'JOF', 'OWN', 'SOW') 
  and DMTYPE not BETWEEN '300' AND '399')
  select * from TaActiveCnt

  /*   cte-3 TmActiveCnt  */

TmActiveCnt as
 
(select 
[CustomerNumber]=[CUSTOMER_NUMBER],
[TmActiveCnt]=[TaDormantCnt] 
from [SNLBanker_DW].[SourceData].[TAP002] ta 
join [SNLBanker_DW].[SourceData].[CUP009] on  ta.DMTYP * 10000000000 + ta.DMACCT = CUP009.CUX1AC 
join  [SNLBanker_DW].[SourceData].[CUP003] cu
on convert(varchar(100),cup009.cux1cs) = cu.CUNBR
join TmActiveCnt 
on cu.CUNBR= cteTaDormantCnt.CUSTOMER_NUMBER
where 
 ta.DMSTAT not in(4,5,8)
 and [dbo].[fn_MDDYY_To_Date](DMDLA)>= (dateadd(month,-60,getdate()))
 and Ta.DMMAIL<>'X'
 and CUP009.CUXREL IN ('JAF', 'JOF', 'OWN', 'SOW') ),
 /*  LnActive Cnt    */
/****** Script for SelectTopNRows command from SSMS  ******/
SELECT  [ACCOUNT_NUMBER]=DSACCT
      ,[ACCOUNT_TYPE]=DSHDSV
      ,[AMOUNT_OF_STOP_HOLD]=DSAMT
      ,[DATE_ENTERED]=DSEDT
      ,[DATE_EXPIRATION]=convert(varchar(10),SNLBanker_DW.[SourceData].[fn_JulianDate_SQL](DSEXDT),101)
      ,[CALC_DATE_EXPIRATION]=format(convert(date,right('0'+SUBSTRING(convert(varchar,DSEDT),1,len(DSEDT)-4),2) + '/' + LEFT(right(DSEDT,4),2)
+ '/2045'),'MM/dd/yyyy') 
      ,[LOW_EXACT_CHECK_NUMBER]=DSSER
      ,[PAYABLE_TO]=DSPAYE
      ,[REASON_FOR_STOP]=DSRESN
      ,[VARIANCE_AMOUNT]=DSVAR
	  ,[DateMatchTest]=   iif((convert(varchar(10),SNLBanker_DW.[SourceData].[fn_JulianDate_SQL](DSEXDT),101)=format(convert(date,right('0'+SUBSTRING(convert(varchar,DSEDT),1,len(DSEDT)-4),2) + '/' + LEFT(right(DSEDT,4),2)
+ '/2045'),'MM/dd/yyyy') ),'yes','no') 
    ,[DaysBetween]=Abs(Date_Expiration-Calc_Date_Expiration)

   From [SourceData].TAP003 Ta3 --Ta_Stop_Hold_File
  join [SourceData].[TAP002]Ta2--Ta_Master_File
 on Ta3.[DSACCT]=Ta2.[DMACCT]
  AND Ta3.DSHDSV=Ta2.[DMTYP]
 where -- Ta3.DSTYPE='1'

--	Ta2.DMTYPE='050'
     Ta3.[DSACCT] IN ('0109399150', '0109400043')
	 and
	
   iif((convert(varchar(10),SNLBanker_DW.[SourceData].[fn_JulianDate_SQL](DSEXDT),101)=format(convert(date,right('0'+SUBSTRING(convert(varchar,DSEDT),1,len(DSEDT)-4),2) + '/' + LEFT(right(DSEDT,4),2)
+ '/2045'),'MM/dd/yyyy') ),'yes','no') ='no'
GO
========================================================
 USE [SNLBanker_DW]
GO

/****** Object:  View [report].[BI_EscheatmentDormantAccounts]  Script Date: 2/13/2019 4:46:07 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


IF OBJECT_ID('[report].[BI_EscheatmentDormantAccounts]') IS NOT NULL
 DROP view [report].[BI_EscheatmentDormantAccounts]
 go


CREATE  view [report].[BI_EscheatmentDormantAccounts]
/******************************************************************************************
Escheatment Dormant Accounts
Description: 

****************
Change History
****************                                                                 
Date			Author				Description 
--------		-------------		------------------------------------
02/14/2019		Aruna jyothi		Initial Version

*******************************************************************************************/
   --    ################### CTE-1 #########################


       	/* Query2 DWC      */


with cteTaDormantCnt as
(select distinct CUSTOMER_NUMBER=CUNBR,[TaDormantCnt]=count(DMACCT)
 from 
 [SNLBanker_DW].[SourceData].[TAP002] ta 
join [SNLBanker_DW].[SourceData].[CUP009] on  ta.DMTYP * 10000000000 + ta.DMACCT = CUP009.CUX1AC 
join  [SNLBanker_DW].[SourceData].[CUP003] cu
on convert(varchar(100),cup009.cux1cs) = cu.CUNBR

group by cu.CUNBR,cup009.CUXREL,ta.DMSTAT,ta.DMDLA,ta.DMMAIL,ta.DMTYPE

having
 CUXREL IN ('JAF', 'JOF', 'OWN', 'SOW') 
 AND ta.DMSTAT='5'
  AND [dbo].[fn_MDDYY_To_Date](DMDLA) <   (dateadd(month,-60,getdate()))
  AND  DMTYPE not BETWEEN '300' AND '399'
  AND Ta.DMMAIL='X'),
--select * from cteTaDormantCnt
   /*  TaActive Cnt    */


 TaActiveCnt as
 (
select 
CustomerNumber=[CUSTOMER_NUMBER],
TaActiveCnt=Count (ta.DMACCT)
 from cteTaDormantCnt
join [SNLBanker_DW].[SourceData].[TAP002] ta 
join [SNLBanker_DW].[SourceData].[CUP009] on  ta.DMTYP * 10000000000 + ta.DMACCT = CUP009.CUX1AC 
join  [SNLBanker_DW].[SourceData].[CUP003] cu
on convert(varchar(100),cup009.cux1cs) = cu.CUNBR
on cu.CUNBR= cteTaDormantCnt.CUSTOMER_NUMBER 
group by cu.CUNBR ,cup009.CUXREL,ta.DMSTAT,ta.DMDLA,ta.DMMAIL,ta.DMTYPE,cup009.cux1cs,[CUSTOMER_NUMBER],[TaDormantCnt]

having
 ta.DMSTAT  in(4,5,8)
 and [dbo].[fn_MDDYY_To_Date](DMDLA)>= (dateadd(month,-60,getdate()))
 and Ta.DMMAIL<>'X'
 and CUP009.CUXREL IN ('JAF', 'JOF', 'OWN', 'SOW') 
  and DMTYPE not BETWEEN '300' AND '399'),
 --   select * from TaActiveCnt


    --     ##############  CTE-2 ##############################

	                          /* Query3 DWC           */
	                         /*     cteTaDormantCnt   */


	 cteTaDormantCnt1 as
(select distinct CUSTOMER_NUMBER=CUNBR,[TaDormantCnt]=count(DMACCT)
 from 
 [SNLBanker_DW].[SourceData].[TAP002] ta 
join [SNLBanker_DW].[SourceData].[CUP009] on  ta.DMTYP * 10000000000 + ta.DMACCT = CUP009.CUX1AC 
join  [SNLBanker_DW].[SourceData].[CUP003] cu
on convert(varchar(100),cup009.cux1cs) = cu.CUNBR

group by cu.CUNBR,cup009.CUXREL,ta.DMSTAT,ta.DMDLA,ta.DMMAIL,ta.DMTYPE,cup009.cux1cs

having
 CUXREL IN ('JAF', 'JOF', 'OWN', 'SOW') 
 AND ta.DMSTAT='5'
  AND [dbo].[fn_MDDYY_To_Date](DMDLA) <   (dateadd(month,-60,getdate()))
  AND  DMTYPE not BETWEEN '300' AND '399'
  AND Ta.DMMAIL='X'),


   /*  TmActive Cnt    */

 

TmActiveCnt as
 
(select 
CustomerNumber=cu9.CUX1CS,
[TmActiveCnt]=Count (tm.[TMACCT])
from [SNLBanker_DW].[SourceData].[TMP003] tm 
join [SNLBanker_DW].[SourceData].[CUP009]cu9 on  tm.TMACCT = cu9.CUX1AC 
join  [SNLBanker_DW].[SourceData].[CUP003] cu
on convert(varchar(100),cu9.cux1cs) = cu.CUNBR
join cteTaDormantCnt1 
on cu.CUNBR= cteTaDormantCnt1.CUSTOMER_NUMBER
group by cu.CUNBR,cu9.CUXREL,tm.TMSTAT,tm.TMDLA,tm.TMMAIL,CUXREL,cu9.cux1cs
having
tm.TMSTAT not in(4,5,8)
 and [dbo].[fn_MDDYY_To_Date](tm.TMDLA)>= (dateadd(month,-60,getdate()))
 and tm.TMMAIL<>'X'
 and cu9.CUXREL IN ('JAF', 'JOF', 'OWN', 'SOW') ),

-- select * from TmActiveCnt



     --     ##############  CTE-3 ##############################


	                         /* Query4 DWC           */
	                         /*     cteTaDormantCnt   */
 cteTaDormantCnt2 as
(select distinct CUSTOMER_NUMBER=CUNBR,[TaDormantCnt]=count(DMACCT)
 from 
 [SNLBanker_DW].[SourceData].[TAP002] ta 
join [SNLBanker_DW].[SourceData].[CUP009] on  ta.DMTYP * 10000000000 + ta.DMACCT = CUP009.CUX1AC 
join  [SNLBanker_DW].[SourceData].[CUP003] cu
on convert(varchar(100),cup009.cux1cs) = cu.CUNBR

group by cu.CUNBR,cup009.CUXREL,ta.DMSTAT,ta.DMDLA,ta.DMMAIL,ta.DMTYPE,cup009.cux1cs

having
 CUXREL IN ('JAF', 'JOF', 'OWN', 'SOW') 
 AND ta.DMSTAT='5'
  AND [dbo].[fn_MDDYY_To_Date](DMDLA) <   (dateadd(month,-60,getdate()))
  AND  DMTYPE not BETWEEN '300' AND '399'
  AND Ta.DMMAIL='X'),


   /*  LnActive Cnt    */

 

LnActiveCnt as
 
(select 
CustomerNumber=cu9.CUX1CS,
[LnActiveCnt]=Count (ln.lnnote)
from [SNLBanker_DW].[SourceData].[LNP003]ln
join [SNLBanker_DW].[SourceData].[CUP009]cu9 on  ln.lnnote = cu9.CUX1AC 
join  [SNLBanker_DW].[SourceData].[CUP003] cu
on convert(varchar(100),cu9.cux1cs) = cu.CUNBR
join cteTaDormantCnt2
on cu.CUNBR= cteTaDormantCnt2.CUSTOMER_NUMBER
group by cu.CUNBR,cu9.CUXREL,ln.LNSTAT,ln.LNCHGF,cu9.CUXREL,cu9.cux1cs
having
ln.LNSTAT <> 'c'
 and LNCHGF in ('B','C','I','P')
 AND  CUXREL IN ('JAF', 'JOF', 'OWN', 'SOW') ),

-- select * from LnActiveCnt

  --     ##############  CTE-3 ##############################


	                         /* Query5 DWC           */
	                         /*     cteTaDormantCnt   */
 cteTaDormantCnt3 as
(select distinct CUSTOMER_NUMBER=CUNBR,[TaDormantCnt]=count(DMACCT)
 from 
 [SNLBanker_DW].[SourceData].[TAP002] ta 
join [SNLBanker_DW].[SourceData].[CUP009] on  ta.DMTYP * 10000000000 + ta.DMACCT = CUP009.CUX1AC 
join  [SNLBanker_DW].[SourceData].[CUP003] cu
on convert(varchar(100),cup009.cux1cs) = cu.CUNBR

group by cu.CUNBR,cup009.CUXREL,ta.DMSTAT,ta.DMDLA,ta.DMMAIL,ta.DMTYPE,cup009.cux1cs

having
 CUXREL IN ('JAF', 'JOF', 'OWN', 'SOW') 
 AND ta.DMSTAT='5'
  AND [dbo].[fn_MDDYY_To_Date](DMDLA) <   (dateadd(month,-60,getdate()))
  AND  DMTYPE not BETWEEN '300' AND '399'
  AND Ta.DMMAIL='X'),


   /*  SD Box Cnt    */

 
SdBoxCnt as
 
(select 
CustomerNumber=sd.SDCIF,
[SdBoxCount]=(Count (sd.SDBOX))
from [SNLBanker_DW].[SourceData].SDP001 sd

join cteTaDormantCnt3
on sd.SDCIF= cteTaDormantCnt3.CUSTOMER_NUMBER
group by sd.SDSTAT,sd.SDCIF
having
sd.SDSTAT in (1,2,4))


-- select * from SdBoxCnt
--    End Of Cte's ------

select 
Date_Activity_Last=ta.DMDLA,
Mail_Code=ta.DMMAIL,
Date_Open=ta.DMOPNJ,
Branch_Primary_Id=ta.DMBRCH,
Product_Code=ta.DMTYPE,
Account_Number=ta.DMACCT,
Short_Name=ta.DMSHRT,
Relationship=cur.CUXREL,
Name_Address_Line_1=cu.CUNA1,
Customer_Number=cur.CUX1CS,
Social_Security_Number=cu.CUSSNR,
Bal_Current=ta.DMCBAL,
Date_Entered=tsh.DSEDT, 
Date_Expiration=tsh.DSEXDT,
Reason_For_Stop=tsh.DSRESN,
Payable_To=tsh.DSPAYE,
TaActiveCnt
TmActiveCnt,
LnActiveCnt,
SdBoxCnt.[SdBoxCount]
from 
 [SNLBanker_DW].[SourceData].[TAP002] ta 
join [SNLBanker_DW].[SourceData].[CUP009] cur on  ta.DMTYP * 10000000000 + ta.DMACCT = cur.CUX1AC 
join  [SNLBanker_DW].[SourceData].[CUP003] cu
on convert(varchar(100),cur.cux1cs) = cu.CUNBR
join  [SNLBanker_DW].[SourceData].[TAP003] tsh 
on ta.DMACCT =tsh.DSACCT and ta.DMTYP=tsh.DSHDSV
join TaActiveCnt on cu.CUNBR = TaActiveCnt. CustomerNumber
join TmActiveCnt on cu.CUNBR = TmActiveCnt.CustomerNumber
join LnActiveCnt on cu.CUNBR = LnActiveCnt.CustomerNumber
join SdBoxCnt on cu.CUNBR = SdBoxCnt.CustomerNumber

where
 CUXREL IN ('JAF', 'JOF', 'OWN', 'SOW') 
  AND ta.DMSTAT='5'
    AND [dbo].[fn_MDDYY_To_Date](DMDLA) <   (dateadd(month,-60,getdate()))
	  AND Ta.DMMAIL='X'
	  ----------------------------
	  
	  -- what is active account?
-- why shoud we use two date conditions, < 5 years and > 5 years
-- what is MMMail = 'x' and <> 'x'
=================================

CREATE TABLE [SourceData].[CUP009](
	[CUXBK] [numeric](3, 0) NULL,
	[CUXREC] [nvarchar](1) NULL,
	[CUX1CS] [nvarchar](10) NULL,
	[CUX1AP] [numeric](2, 0) NULL,
	[CUX1TY] [numeric](1, 0) NULL,
	[CUX1AC] [numeric](12, 0) NULL,
	[CUXREL] [nvarchar](3) NULL,
	[CUXCII] [nvarchar](2) NULL,
	[CUXOCD] [numeric](3, 0) NULL,
	[CUXNNM] [nvarchar](40) NULL,
	[BankName] [varchar](50) NULL
) ON [PRIMARY]
GO
===================================
CREATE TABLE [SourceData].[CUP003](
	[CUBK] [numeric](3, 0) NULL,
	[CUNBR] [nvarchar](10) NULL,
	[CUSTAT] [nvarchar](1) NULL,
	[CUALT] [nvarchar](1) NULL,
	[CUNA1] [nvarchar](40) NULL,
	[CUNA2] [nvarchar](40) NULL,
	[CUNA3] [nvarchar](40) NULL,
	[CUNA4] [nvarchar](40) NULL,
	[CUNA5] [nvarchar](40) NULL,
	[CUNA6] [nvarchar](40) NULL,
	[CUZIP] [numeric](5, 0) NULL,
	[CUZIP2] [numeric](4, 0) NULL,
	[CUZIP3] [nvarchar](2) NULL,
	[CUZIP4] [nvarchar](1) NULL,
	[CUSHRT] [nvarchar](18) NULL,
	[CUSSNR] [numeric](11, 0) NULL,
	[CUSSTY] [nvarchar](1) NULL,
	[CUCLPH] [numeric](13, 0) NULL,
	[CUHMPH] [numeric](13, 0) NULL,
	[CUBUPH] [numeric](13, 0) NULL,
	[CUPOFF] [nvarchar](5) NULL,
	[CUSOFF] [nvarchar](3) NULL,
	[CUPOF1] [nvarchar](5) NULL,
	[CUPOF2] [nvarchar](5) NULL,
	[CUOPDT] [numeric](6, 0) NULL,
	[CUTYPE] [nvarchar](2) NULL,
	[CUTYP] [numeric](3, 0) NULL,
	[CUSIC] [numeric](6, 0) NULL,
	[CUSEX] [nvarchar](1) NULL,
	[CURACE] [nvarchar](1) NULL,
	[CUOWN] [nvarchar](1) NULL,
	[CUYREM] [numeric](2, 0) NULL,
	[CUINC] [numeric](5, 0) NULL,
	[CUSRIN] [nvarchar](1) NULL,
	[CUBDTE] [numeric](6, 0) NULL,
	[CUDEP] [numeric](2, 0) NULL,
	[CUCTC] [nvarchar](18) NULL,
	[CUCTCT] [nvarchar](6) NULL,
	[CUCIRA] [nvarchar](1) NULL,
	[CUMNBR] [numeric](2, 0) NULL,
	[CUNTID] [nvarchar](20) NULL,
	[CUUSR1] [nvarchar](18) NULL,
	[CUCLNK] [nvarchar](15) NULL,
	[CUUSR3] [nvarchar](15) NULL,
	[CUCDCH] [nvarchar](1) NULL,
	[CUCDCN] [nvarchar](16) NULL,
	[CUCDCD] [numeric](7, 0) NULL,
	[CUCMCH] [nvarchar](1) NULL,
	[CUCMNR] [nvarchar](16) NULL,
	[CUCMCD] [numeric](7, 0) NULL,
	[CUCVSH] [nvarchar](1) NULL,
	[CUCVCN] [nvarchar](16) NULL,
	[CUCVCD] [numeric](7, 0) NULL,
	[CUCATH] [nvarchar](1) NULL,
	[CUCATN] [nvarchar](19) NULL,
	[CUCATD] [numeric](7, 0) NULL,
	[CUCLNG] [nvarchar](1) NULL,
	[CUCCCD] [numeric](3, 0) NULL,
	[CULGLR] [numeric](3, 0) NULL,
	[CUCWHP] [numeric](5, 5) NULL,
	[CUCPSP] [nvarchar](10) NULL,
	[CUCTXN] [nvarchar](14) NULL,
	[CUCPRF] [numeric](3, 0) NULL,
	[CUSHKY] [nvarchar](10) NULL,
	[CUITLD] [numeric](3, 0) NULL,
	[CUPSTL] [nvarchar](10) NULL,
	[CUACOM] [nvarchar](2) NULL,
	[CUBRCH] [numeric](3, 0) NULL,
	[CUMIDT] [numeric](6, 0) NULL,
	[CUMRTS] [nvarchar](1) NULL,
	[CUMAIL] [nvarchar](1) NULL,
	[CUSOLI] [nvarchar](1) NULL,
	[CUSOCI] [nvarchar](4) NULL,
	[CUCPNA] [nvarchar](1) NULL,
	[CUBPNA] [nvarchar](1) NULL,
	[CUPERS] [nvarchar](1) NULL,
	[CUSALU] [nvarchar](20) NULL,
	[CUFAX] [numeric](13, 0) NULL,
	[CUTELX] [numeric](7, 0) NULL,
	[CUTXAN] [nvarchar](8) NULL,
	[CUDOCF] [nvarchar](1) NULL,
	[CUDCDT] [numeric](6, 0) NULL,
	[CUTINU] [nvarchar](1) NULL,
	[CUTADT] [numeric](6, 0) NULL,
	[CUWPRT] [numeric](2, 0) NULL,
	[CUCECD] [nvarchar](1) NULL,
	[CUCELM] [numeric](11, 0) NULL,
	[CUEXTF] [nvarchar](1) NULL,
	[CUMTND] [numeric](7, 0) NULL,
	[CUCNCD] [numeric](5, 0) NULL,
	[CUMARK] [nvarchar](5) NULL,
	[CUEMPL] [nvarchar](1) NULL,
	[CUINQ] [nvarchar](1) NULL,
	[CUMNT] [nvarchar](1) NULL,
	[CUCENS] [numeric](7, 2) NULL,
	[CUCODT] [numeric](7, 0) NULL,
	[CUDEDT] [numeric](6, 0) NULL,
	[CUACCD] [numeric](5, 0) NULL,
	[CUBYR1] [numeric](4, 0) NULL,
	[CUBYR2] [numeric](4, 0) NULL,
	[CUPREF] [nvarchar](10) NULL,
	[CUJBDT] [numeric](7, 0) NULL,
	[CUJDDT] [numeric](7, 0) NULL,
	[CUEMA1] [nvarchar](54) NULL,
	[CUEMA2] [nvarchar](54) NULL,
	[CUOPT] [nvarchar](1) NULL,
	[CUOPTD] [numeric](7, 0) NULL,
	[CUSPFG] [nvarchar](1) NULL,
	[CUOENTTYP] [nvarchar](5) NULL,
	[CUCENTTYP] [nvarchar](5) NULL,
	[CUAMDT] [numeric](7, 0) NULL,
	[CURPPRCDT] [numeric](7, 0) NULL,
	[CUPREFOVR] [numeric](1, 0) NULL,
	[CUTOLCNT] [numeric](9, 0) NULL,
	[CUNRA] [numeric](1, 0) NULL,
	[CURCPCC] [nvarchar](2) NULL,
	[CUCREST] [nvarchar](2) NULL,
	[CURCPCD] [numeric](2, 0) NULL,
	[CUPROVC] [nvarchar](2) NULL,
	[CUNRAP] [numeric](1, 0) NULL,
	[CUMIDTJ] [numeric](7, 0) NULL,
	[CUOPDTJ] [numeric](7, 0) NULL,
	[CUFATCAST] [numeric](2, 0) NULL,
	[CUREGIIN] [nvarchar](19) NULL,
	[CUCIPRVDT] [numeric](7, 0) NULL,
	[CUEDD1] [nvarchar](10) NULL,
	[CUEDD2] [nvarchar](10) NULL,
	[CUEDD3] [nvarchar](10) NULL,
	[CUMLTY] [nvarchar](1) NULL,
	[CUPEPLOC] [nvarchar](15) NULL,
	[CUPEPLVL] [nvarchar](10) NULL,
	[CUPEPTYPE] [nvarchar](1) NULL,
	[CURSKSCR1] [nvarchar](10) NULL,
	[CURSKSCR2] [nvarchar](10) NULL,
	[CURSKSCR3] [nvarchar](10) NULL,
	[CURSKSCR4] [nvarchar](10) NULL,
	[CUSIC2] [numeric](6, 0) NULL,
	[CUSIC3] [numeric](6, 0) NULL,
	[CUWEBURL] [nvarchar](54) NULL,
	[CUNONCSTDT] [numeric](7, 0) NULL,
	[CUNATID2] [nvarchar](20) NULL,
	[CUCREST2] [nvarchar](2) NULL,
	[CUNATID3] [nvarchar](20) NULL,
	[CUCREST3] [nvarchar](2) NULL,
	[BankName] [varchar](50) NULL
) ON [PRIMARY]
============================
Functions
******converting date column 61675 like-------06/161/75********
create function [dbo].[fn_MDDYY_To_Date] (@InputStr varchar(10))
returns varchar(10)
as

begin

declare @OutputValue varchar(200)
set @OutputValue = left(RIGHT('0' + CONVERT(VARCHAR,@InputStr), 6),2) + '/' + substring(RIGHT('0' + CONVERT(VARCHAR,@InputStr), 6),3,2) + '/' + right(RIGHT('0' + CONVERT(VARCHAR,@InputStr), 6),2)
return @OutputValue
end
go

----------------
**********************adding 0's to accountnumber*******************
create function [dbo].[fn_PadZeroToCertainDigit] (@InputStr varchar(200), @PadLength int)
returns varchar(200)
as

begin

declare @OutputValue varchar(200)
set @OutputValue = RIGHT(replicate ('0',@PadLength) + @InputStr, @PadLength)
return @OutputValue

end
GO

-----------------------------------
CREATE Function [dbo].[GetAddressLine](@AddressNumber Int)
Returns varchar(100)
AS
Begin
	Declare @str varchar(100)
	
	select @str=LEFT(COALESCE(@str+',','')+ ad.TEXT,100)
	from SourceData.ADDRLINE ad where ad.ADDRNBR = @AddressNumber
	order by ad.LINENBR
	Return @str
end
go
-----------------------------------
CREATE  Function [dbo].[GetDataDateType](@Date DateTime)

Returns varchar(10)

AS

Begin


Declare @DateType varchar(10)

IF  convert(date,@Date)=convert(date,dbo.GetMonthEnd(@Date))
BEGIN
--SET @BusinessDate= dbo.GetMonthEnd(@Date-1)
SET @DateType= 'M'
END



ELSE IF 
(Datename(weekday,@Date) = 'Friday' --The data is as of Friday and Either Fri,Sat,Sun is last day of month
and ( convert(date,@Date+2)=convert(date,dbo.GetMonthEnd(@Date)) 
or convert(date,@Date+1)=convert(date,dbo.GetMonthEnd(@Date)) 
or convert(date,@Date)=convert(date,dbo.GetMonthEnd(@Date)) ) 
)
OR

(Datename(weekday,@Date) = 'Saturday' -- The data is as of Saturday and Either Sat,Sun is last day of month
and ( convert(date,@Date+1)=convert(date,dbo.GetMonthEnd(@Date)) or convert(date,@Date)=convert(date,dbo.GetMonthEnd(@Date)) ) 
)

OR ( Datename(weekday,@Date) ='Sunday'  -- The data is as of Sunday and it is the last day of the month
and convert(date,@Date)=convert(date,dbo.GetMonthEnd(@Date))  )



BEGIN
--SET @BusinessDate= dbo.GetMonthEnd(@Date)
SET @DateType= 'M'

END


ELSE
BEGIN
SET @DateType= 'D'
END

RETURN  @DateType

END
GO

-------------------------------------------
CREATE Function [dbo].[GetMonthEnd](@Date DateTime)
Returns DateTime
AS
Begin
	Set @Date = DateAdd(Month,1,@Date)
	Set @Date = Cast(Cast(Month(@Date)As varchar(2))+'-1-'+Cast(Year(@Date)As varchar(4)) As DateTime)
	Return DateAdd(Day,-1,@Date)
End
GO
------------------------------------------
CREATE FUNCTION [dbo].[ufn_GetFirstDayOfQuarter] ( @pInputDate DATETIME )
RETURNS DATETIME
BEGIN
DECLARE @vOutputDate DATETIME
SET @vOutputDate = CAST(YEAR(@pInputDate) AS VARCHAR(4)) +
CASE WHEN MONTH(@pInputDate) IN ( 1, 2, 3) THEN '/01/01'
WHEN MONTH(@pInputDate) IN ( 4, 5, 6) THEN '/04/01'
WHEN MONTH(@pInputDate) IN ( 7, 8, 9) THEN '/07/01'
WHEN MONTH(@pInputDate) IN (10, 11, 12) THEN '/10/01'
END
RETURN @vOutputDate
END
GO
--------------------------------------------
create FUNCTION [SourceData].[fn_ISODate_SQL]
	( @UNIX_TIME VARCHAR(10) )
RETURNS  DATETIME
AS
BEGIN

	IF LEN(@UNIX_TIME) >= 5
	BEGIN
	DECLARE @bad_date	VARCHAR(6)
	DECLARE @month		VARCHAR(2)
	DECLARE @day		VARCHAR(2)
	DECLARE @year		VARCHAR(4)
	DECLARE @outputvalue DATETIME
	DECLARE @sql_date	VARCHAR(20)

	SET  @bad_date = @UNIX_TIME

	--format the date parts and let SQL covert to date using 2049 rule
	SET @bad_date = RIGHT('000000' + @bad_date, 6)
	SET @month = SUBSTRING(@bad_date, 1, 2)
	SET @day = SUBSTRING(@bad_date, 3, 2)
	SET @year = SUBSTRING(@bad_date, 5, 2)
	SET @sql_date = @month + '/' + @day + '/' + @year

	-- validate the date value
	  IF (ISDATE(@sql_date) =1)
	  BEGIN
			SET @outputvalue =  cast(@sql_date AS DATETIME)
	  END
	  ELSE
	  BEGIN
			SET @outputvalue = NULL
	  END
	
	END
	ELSE 
	BEGIN
		SET @outputvalue = NULL
	END

	RETURN  @outputvalue	

END




GO

------------------------------
/****** Object:  UserDefinedFunction [SourceData].[fn_JulianDate_SQL]    Script Date: 2/21/2019 11:47:28 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/***************************
File Name  : fn_JulianDate_SQL.sql
Created by : 
Created Date:
Description :   Date conversion function converting Julian Date. Use for most dates from DB2

****************************/


CREATE  FUNCTION [SourceData].[fn_JulianDate_SQL]( @JulianDate INT )
RETURNS  DATETIME
AS

BEGIN
	DECLARE @OUTPUTVALUE DATETIME

	IF @JulianDate = 0
	BEGIN 
		SET @outputvalue = NULL
	END
	ELSE
	BEGIN
		IF LEFT(@JulianDate,4) < 1800
		BEGIN
			SET @outputvalue = NULL
		END
		ELSE
		BEGIN
			SET @OUTPUTVALUE = (SELECT CONVERT(DATE,DATEADD(day, CAST(RIGHT(@JulianDate,3) AS int) - 1, 
            CONVERT(datetime, LEFT(@JulianDate,4) + '0101', 112))))
		END
	END

	RETURN  @outputvalue	

END
------------------------------------------------
/****** Object:  UserDefinedFunction [SourceData].[fn_MDDYYYYDate_SQL]    Script Date: 2/21/2019 11:48:12 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

/***************************
File Name  : fn_JulianDate_SQL.sql
Created by : 
Created Date:
Description :   Date conversion function converting Julian Date. Use for most dates from DB2

****************************/


CREATE  FUNCTION [SourceData].[fn_MDDYYYYDate_SQL]( @MDDYYYYDate INT )
RETURNS  DATETIME
AS

BEGIN
DECLARE @outputvalue DATETIME

	IF @MDDYYYYDate = 0
	BEGIN 
		SET @outputvalue = NULL
	END
	ELSE
	BEGIN
		DECLARE @MMDDYYYY varchar(8)
		SELECT @MMDDYYYY = RIGHT('0' + CAST(@MDDYYYYDate as varchar(255)),8)  
		SET @outputvalue = CAST(SUBSTRING(@MMDDYYYY,1,2) + '/'+SUBSTRING(@MMDDYYYY,3,2) + '/'+SUBSTRING(@MMDDYYYY,5,4) as date)	
	END
	
	RETURN  @outputvalue

END
----------------------------------------------
/****** Object:  UserDefinedFunction [SourceData].[GetAddressLine]    Script Date: 2/21/2019 11:48:46 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


create Function [SourceData].[GetAddressLine](@AddressNumber Int)
Returns varchar(100)
AS
Begin
	Declare @str varchar(100)
	
	select @str=LEFT(COALESCE(@str+',','')+ ad.TEXT,100)
	from SourceData.ADDRLINE ad where ad.ADDRNBR = @AddressNumber
	order by ad.LINENBR
	Return @str



END
GO

----------------------------
USE [SNLBanker_DW]
GO

/****** Object:  StoredProcedure [dbo].[Budgetfill]    Script Date: 2/21/2019 12:32:06 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE procedure [dbo].[Budgetfill]
AS

declare @buddate table (buddate datetime, fname nvarchar(128), minyear int)

INSERT INTO @buddate (buddate, fname)
select min(fulldate), ForecastName from factbudget fb join dimdate dd on dd.datekey = fb.ProcessingDateKey
where forecastname not in (select forecastname from factbudget where systemflag = 2) 
group by forecastname

update @buddate set minyear = year(buddate) - 1

declare @insdates table (datekey int, fname nvarchar(128), fulldate datetime) 
insert into @insdates (datekey, fname, fulldate)
select datekey , fname, fulldate from @buddate bd join  dimdate dd on dd.DateYear = bd.minyear and datemonth = 12 and dd.isMonthEnd = 1

insert into @insdates (datekey, fname)
select dd.datekey , bd.fname from @buddate bd join @insdates idt on bd.fname = idt.fname join  dimdate dd on dd.FullDate > idt.fulldate and dd.fulldate < bd.buddate 
where dd.isMonthEnd = 1
 
--select * from @insdates

declare @budgetinfo table
(fname nvarchar(128), acctkey int, orgkey int, publishnbr int ) 
insert into @budgetinfo
select distinct forecastname, glaccountkey, OrganizationKey, publishnbr from factBudget sb 

INSERT INTO [dbo].[factBudget]
           ([ProcessingDateKey]
           ,[GLAccountKey]
           ,[GLCostCenterKey]
           ,[OrganizationKey]
           ,[Budget]
           ,[PublishNbr]
           ,[ForecastName]
           ,[DailyMonthlyFlag]
           ,[InsertedDate]
           ,[InsertedBy]
           ,[PeriodTypeKey]
           ,[SystemFlag])
select idt.datekey, GLAccountKey, GLCostCenterKey, OrganizationKey, CurrentBalance, Publishnbr, idt.fname, 'M', getdate(), suser_sname(), fg.PeriodTypeKey, 2
 from factGeneralLedger fg join @budgetinfo bi on bi.acctkey = fg.GLAccountKey
and bi.orgkey = fg.OrganizationKey
join @insdates idt on idt.datekey = fg.ProcessingDateKey and idt.fname = bi.fname
 





GO
